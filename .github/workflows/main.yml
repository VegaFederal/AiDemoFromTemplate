name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  VPC_ID: vpc-05beac377794a8bd0  # Updated from project-config.json
  SUBNET_IDS: subnet-077c4af68ae8a1869  # Updated from project-config.json
  AWS_REGION: us-east-1
  STACK_NAME: AiDemo

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up environment
        run: echo "Setting up test environment"
      - name: Run tests
        run: echo "Running tests"

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # Updated to use the latest version of the AWS credentials action
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      # Step 1: Create S3-only template
      - name: Create S3-only template
        run: |
          mkdir -p .github/deployment
          cat > .github/deployment/s3-only-template.yaml << 'EOF'
          AWSTemplateFormatVersion: '2010-09-09'
          Description: S3 bucket for AI Demo

          Parameters:
            Environment:
              Type: String
              Default: dev
              AllowedValues:
                - dev
                - test
                - prod
              Description: The deployment environment

          Resources:
            # S3 Bucket for all static website files Creation.
            WebsiteBucket:
              Type: AWS::S3::Bucket
              Properties:
                AccessControl: Private
                BucketEncryption:
                  ServerSideEncryptionConfiguration:
                    - ServerSideEncryptionByDefault:
                        SSEAlgorithm: AES256
                VersioningConfiguration:
                  Status: Enabled
                Tags:
                  - Key: Name
                    Value: !Sub ${AWS::StackName}-website-bucket
                  - Key: Environment
                    Value: !Ref Environment

          Outputs:
            WebsiteBucketName:
              Description: "Name of the S3 bucket for website files"
              Value: !Ref WebsiteBucket
          EOF

      # Step 2: Create Lambda deployment package
      - name: Create Lambda deployment package
        run: |
          mkdir -p deployment/lambda
          cp src/lambda/lambdaAiHandler.py deployment/lambda/
          cd deployment/lambda
          zip -r ../lambdaAiHandler.zip .
          cd ../..
          
          # List the contents of the ZIP file to verify
          unzip -l deployment/lambdaAiHandler.zip

      # Step 3: Deploy S3 bucket first
      - name: Deploy S3 bucket first
        id: deploy-bucket
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.STACK_NAME }}-s3
          template: .github/deployment/s3-only-template.yaml
          parameter-overrides: >-
            Environment=dev
          no-fail-on-empty-changeset: "1"

      # Step 4: Get the S3 bucket name from CloudFormation outputs
      - name: Get S3 bucket name
        id: get
