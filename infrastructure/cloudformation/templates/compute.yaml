AWSTemplateFormatVersion: '2010-09-09'
Description: Compute resources for AI Demo

Parameters:
  ProjectName:
    Type: String
    Default: AiDemo
    Description: Name of the project

  ProjectNameLower:
    Type: String
    Default: aidemo
    Description: Name of the project in lower case.

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: The deployment environment
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the existing company VPC
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of existing subnet IDs for deployment
  
  WebsiteBucketName:
    Type: String
    Description: Name of the S3 bucket for website files
    
  ModelId:
    Type: String
    Default: amazon.nova-pro-v1:0
    Description: Amazon Bedrock model ID to use

Resources:
  # Lambda Function definition for the API
  AIFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub "${ProjectNameLower}-${Environment}-deployment"
        S3Key: lambdaAiHandler.zip
      Description: AI Lambda handler for request response.
      FunctionName: !Sub "${ProjectName}-${Environment}-AIHandler"
      Handler: lambdaAiHandler.lambda_handler
      MemorySize: 256
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.11
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          MODEL_ID: !Ref ModelId
          PROJECT_NAME: !Ref ProjectName
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-lambda"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # IAM Role for the Lambda Function
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: LambdaBedrockPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                Resource: 
                  - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/${ModelId}"
                  - !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
                  - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-*"

        - PolicyName: LambdaS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${WebsiteBucketName}/*"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-lambda-role"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda function
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: Allow HTTPS outbound traffic
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-lambda-sg"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

Conditions:
  IsProd: !Equals [!Ref Environment, "prod"]

Outputs:
  LambdaFunctionArn:
    Description: "ARN of the Lambda function"
    Value: !GetAtt AIFunction.Arn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-LambdaFunctionArn"